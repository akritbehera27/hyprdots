set shell sh
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set ignorecase true
set cursorpreviewfmt "\033[0m"
set icons true
set mouse

# use enter for shell commands
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$$EDITOR \$fx";;
        image/*) imv $fx;;
        video/*) mpv $fx;;
        audio/*) mpv $fx;;
        application/pdf) notify-send "Opening Firefox." & firefox $fx;;
        *) lf -remote "send $id \$$EDITOR \$fx" > /dev/null 2>&1;;
    esac
}}

cmd open-mpv ${{ notify-send "Opening MPV." & mpv "$f" & }}
cmd open-firefox ${{ notify-send "Opening Firefox." & firefox "$f" & }}
cmd open-image ${{ notify-send "Opening Image." & imv "$f" & }}
cmd open-code ${{ notify-send "Opening VScode." & vscodium "$f" & }}


# Trash bindings
cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    file=${files%%;*}

    trash-put "$(basename "$file")"
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd restore_trash ${{ trash-restore }}

map . set hidden!
map DD trash
map DR restore_trash
map mf mkfile
map md mkdir
map <mouse-right> open
map <esc> cd ..

